CREATE DATABASE GYM_Management_System
use GYM_Management_System


CREATE TABLE GYM_MANAGEMENT
(
MANAGER_ID INT not null,
MANAGER_NAME NVARCHAR(20),
MANAGER_CONTACT_NO BIGINT,
MANAGER_EMAIL VARCHAR(100),
MANAGER_ADDRESS VARCHAR(20),
MANAGER_DOB DATE,
MANAGER_SSN BIGINT,
CONSTRAINT GYM_MANAGEMENT_PK PRIMARY KEY(MANAGER_ID)
);

CREATE TABLE GYM
(
GYM_ID INT not null,
MANAGER_ID INT,
GYM_NAME VARCHAR(25),
GYM_CONTACT_NO BIGINT,
GYM_EMAIL VARCHAR(100),
GYM_LOCATION VARCHAR(20),
CONSTRAINT GYM_PK PRIMARY KEY(GYM_ID),
CONSTRAINT GYM_FK_1 FOREIGN KEY(MANAGER_ID) REFERENCES GYM_MANAGEMENT(MANAGER_ID)
);


CREATE TABLE MAINTAINANCE_EMPLOYEE
(
MEMPLOYEE_ID INT not null,
EMPLOYEE_NAME VARCHAR(20),
M_CONTACT_NO BIGINT,
M_EMAIL VARCHAR(100),
M_ADDRESS VARCHAR(20),
M_DOB DATE,
M_SSN BIGINT,
M_Date_Of_Joining DATE,
GYM_ID INT,
CONSTRAINT MAINTAINANCE_EMPLOYEE_PK PRIMARY KEY(MEMPLOYEE_ID),
CONSTRAINT MAINTAINANCE_EMPLOYEE_FK FOREIGN KEY(GYM_ID) REFERENCES GYM(GYM_ID),
);


CREATE TABLE INSTRUCTOR
(
INSTRUCTOR_ID INT not null,
INSTRUCTOR_NAME VARCHAR(20),
INSTRUCTOR_CONTACT_NO BIGINT,
INSTRUCTOR_EMAIL VARCHAR(100),
INSTRUCTOR_ADDRESS VARCHAR(20),
INSTRUCTOR_DOB DATE,
INSTRUCTOR_SSN BIGINT,
INSTRUCTOR_DOJ DATE,
GYM_ID INT,
CONSTRAINT INSTRUCTOR_PK PRIMARY KEY(INSTRUCTOR_ID),
CONSTRAINT INSTRUCTOR_FK FOREIGN KEY(GYM_ID) REFERENCES GYM(GYM_ID),
);


CREATE TABLE GYM_PLAN
(
GYM_PLAN_ID INT not null,
PLAN_NAME VARCHAR(20),
PLAN_DURATION BIGINT,
PLAN_DESCRIPTION VARCHAR(100),
PLAN_FEE INT,
GYM_ID INT,
CONSTRAINT PLAN_ONE_PK PRIMARY KEY(GYM_PLAN_ID),
CONSTRAINT PLAN_ONE_FK2 FOREIGN KEY(GYM_ID) REFERENCES GYM(GYM_ID),
CONSTRAINT CHK_PLANDURATION CHECK (PLAN_DURATION='3' or PLAN_DURATION='6'
or PLAN_DURATION='12'),
CONSTRAINT CHK_PLANTYPE CHECK (PLAN_NAME='3-month plan' or
PLAN_NAME='6-month plan' or PLAN_NAME='12-month plan')
);



CREATE TABLE GYM_USER
(
GYM_USER_ID INT not null,
[USER_NAME] VARCHAR(20),
[USER_CONTACT] BIGINT,
[USER_EMAIL] VARCHAR(100),
[USER_DOB] DATE,
[USER_DOJ] DATE,
[USER_ADDRESS] VARCHAR(30),
payment_type varchar(50),
GYM_ID INT,
[PLAN_ID] INT,
CONSTRAINT [USER_PK] PRIMARY KEY(GYM_USER_ID),
CONSTRAINT [USER_FK1] FOREIGN KEY(GYM_ID) REFERENCES GYM(GYM_ID),
CONSTRAINT [USER_FK2] FOREIGN KEY([PLAN_ID]) REFERENCES GYM_PLAN(GYM_PLAN_ID),
CONSTRAINT CHK_PAYMENT CHECK (PAYMENT_TYPE='Card' or PAYMENT_TYPE='Cash' or
PAYMENT_TYPE='OnlinePayment')
);

CREATE TABLE PAYMENT
(
PAYMENT_ID INT IDENTITY(500,1) not null,
PAYMENT_TYPE VARCHAR(25),
AMOUNT INT,
DATE_OF_PAYMENT DATE,
[USER_ID] INT,
PLAN_ID INT,
CONSTRAINT PAYMENT_PK PRIMARY KEY(PAYMENT_ID),
CONSTRAINT PAYMENT_FK FOREIGN KEY([USER_ID]) REFERENCES GYM_USER(GYM_USER_ID),
CONSTRAINT CHK_PAYMENT1 CHECK (PAYMENT_TYPE='Card' or PAYMENT_TYPE='Cash' or
PAYMENT_TYPE='OnlinePayment')
);

CREATE TABLE GYM_SESSION
(
GYM_SESSION_ID INT not null,
SESSION_START_TIME TIME,
SESSION_END_TIME TIME,
SESSION_START_DATE DATE,
SESSION_END_DATE DATE,
INSTRUCTOR_ID INT,
CONSTRAINT GYM_SESSION_PK PRIMARY KEY(GYM_SESSION_ID),
CONSTRAINT GYM_SESSION_FK FOREIGN KEY(INSTRUCTOR_ID) REFERENCES
INSTRUCTOR(INSTRUCTOR_ID),
);

CREATE TABLE CUSTOMER_FEEDBACK
(
FEEDBACK_ID INT not null,
GYM_SESSION_ID VARCHAR(20),
RATING INT,
FEEDBACK_DATE DATE,
[USER_ID] INT,
CONSTRAINT CUSTOMER_FEEDBACK_PK PRIMARY KEY(FEEDBACK_ID),
CONSTRAINT CUSTOMER_FEEDBACK_FK1 FOREIGN KEY([USER_ID]) REFERENCES GYM_USER(GYM_USER_ID),
);


CREATE TABLE ENROLLMENT
(
GYM_SESSION_ID INT not null,
[USER_ID] INT,
ENROLLMENT_DATE DATE,
CONSTRAINT ENROLLMENT_PK PRIMARY KEY (GYM_SESSION_ID, [USER_ID]),
CONSTRAINT ENROLLMENT_FK1 FOREIGN KEY(GYM_SESSION_ID) REFERENCES
GYM_SESSION(GYM_SESSION_ID),
CONSTRAINT ENROLLMENT_FK2 FOREIGN KEY([USER_ID]) REFERENCES GYM_USER(GYM_USER_ID)
);

CREATE TABLE EQUIPMENT
(
EQUIPMENT_ID INT not null,
EQUIPMENT_NAME VARCHAR(25),
EQUIPMENT_TYPE VARCHAR(100),
MAINTANANCE_RECORD VARCHAR(20),
GYM_ID INT,
CONSTRAINT EQUIPMENT_PK PRIMARY KEY(EQUIPMENT_ID),
CONSTRAINT EQUIPMENT_FK FOREIGN KEY(GYM_ID) REFERENCES GYM(GYM_ID),
CONSTRAINT CHK_EQIPMENT CHECK ([EQUIPMENT_TYPE]='FreeWeights' or
[EQUIPMENT_TYPE]='CableMachines' or [EQUIPMENT_TYPE]='CardioMachines' or
[EQUIPMENT_TYPE]='Barbells')
);


CREATE TABLE REPAIR
(
REPAIR_ID INT not null,
REPAIR_RAISE_DATE DATE,
REPAIR_END_DATE DATE,
REASON VARCHAR(150),
EQUIPMENT_ID INT,
MEMPLOYEE_ID INT,
CONSTRAINT REPAIR_PK PRIMARY KEY(REPAIR_ID),
CONSTRAINT REPAIR_FK1 FOREIGN KEY(EQUIPMENT_ID) REFERENCES EQUIPMENT(EQUIPMENT_ID),
CONSTRAINT REPAIR_FK2 FOREIGN KEY(MEMPLOYEE_ID) REFERENCES MAINTAINANCE_EMPLOYEE(MEMPLOYEE_ID)
);













